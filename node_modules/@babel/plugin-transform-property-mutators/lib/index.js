"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _helperPluginUtils = require("@babel/helper-plugin-utils");

var defineMap = require("@babel/helper-define-map");

var _core = require("@babel/core");

var _default = (0, _helperPluginUtils.declare)(api => {
  api.assertVersion(7);
  return {
    name: "transform-property-mutators",
    visitor: {
      ObjectExpression(path, {
        file
      }) {
        const {
          node
        } = path;
        let mutatorMap;
        const newProperties = node.properties.filter(function (prop) {
          if (_core.types.isObjectMethod(prop)) {
            if (prop.kind === "get" || prop.kind === "set") {
              var _mutatorMap;

              (_mutatorMap = mutatorMap) != null ? _mutatorMap : mutatorMap = {};

              if (!prop.computed) {
                defineMap.push(mutatorMap, prop, null, file);
                return false;
              }
            }
          }

          return true;
        });

        if (mutatorMap === undefined) {
          return;
        }

        node.properties = newProperties;
        path.replaceWith(_core.types.callExpression(_core.types.memberExpression(_core.types.identifier("Object"), _core.types.identifier("defineProperties")), [node, defineMap.toDefineObject(mutatorMap)]));
      }

    }
  };
});

exports.default = _default;