name: test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: circleci/postgres:10-alpine-postgis
        env:
          POSTGRES_USER: root
        ports:
        - 5433:5432
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    - uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Install postgres client
      run: sudo apt-get install libpq-dev
    - uses: browser-actions/setup-chrome@latest
    - run: chrome --version
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ matrix.ruby }}-
    # - name: Get yarn cache directory path
    #   id: yarn-cache-dir-path
    #   run: echo "::set-output name=dir::$(yarn cache dir)"
    # - uses: actions/cache@v1
    #   id: yarn-cache
    #   with:
    #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-
    - name: bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    # - name: yarn install
    #   env:
    #     FA_NPM_TOKEN: ${{ secrets.FA_NPM_TOKEN }}
    #   run: yarn install
    # - name: decidim:webpacker:install
    #   run: bundle exec rake decidim:webpacker:install

    - name: Database setup
      run: bundle exec rake db:create db:migrate RAILS_ENV=test

    - name: run tests
      # env:
      #   REDIS_URL: "redis"
      run: |
        bundle exec rspec \
          --format progress \
          --format RspecJunitFormatter

